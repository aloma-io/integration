{
  "openapi": "3.0.0",
  "info": {
    "title": "Orders API",
    "version": "1.0.0",
    "description": "A simple orders management API"
  },
  "servers": [
    {
      "url": "https://api.testshop.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/orders": {
      "get": {
        "operationId": "getOrders",
        "summary": "List all orders",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "shipped", "delivered", "cancelled"]
            },
            "description": "Filter by order status"
          },
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by customer ID"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "description": "Maximum number of orders to return"
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderList"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOrder",
        "summary": "Create a new order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "operationId": "getOrder",
        "summary": "Get a specific order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOrderStatus",
        "summary": "Update order status",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/cancel": {
      "post": {
        "operationId": "cancelOrder",
        "summary": "Cancel an order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "required": ["id", "customerId", "items", "status", "totalAmount"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique order identifier"
          },
          "customerId": {
            "type": "string",
            "description": "Customer who placed the order"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "description": "Items in the order"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "shipped", "delivered", "cancelled"],
            "description": "Current order status"
          },
          "totalAmount": {
            "type": "number",
            "minimum": 0,
            "description": "Total order amount"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Order creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "required": ["productId", "quantity", "unitPrice"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product identifier"
          },
          "productName": {
            "type": "string",
            "description": "Product name"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Quantity ordered"
          },
          "unitPrice": {
            "type": "number",
            "minimum": 0,
            "description": "Price per unit"
          },
          "totalPrice": {
            "type": "number",
            "minimum": 0,
            "description": "Total price for this item"
          }
        }
      },
      "Address": {
        "type": "object",
        "required": ["street", "city", "zipCode", "country"],
        "properties": {
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State or province"
          },
          "zipCode": {
            "type": "string",
            "description": "ZIP or postal code"
          },
          "country": {
            "type": "string",
            "description": "Country"
          }
        }
      },
      "OrderList": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of orders"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Whether there are more orders available"
          }
        }
      },
      "CreateOrderRequest": {
        "type": "object",
        "required": ["customerId", "items"],
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer who is placing the order"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemRequest"
            },
            "description": "Items to order"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "OrderItemRequest": {
        "type": "object",
        "required": ["productId", "quantity"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product to order"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Quantity to order"
          }
        }
      },
      "UpdateOrderStatusRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["confirmed", "shipped", "delivered"],
            "description": "New order status"
          },
          "trackingNumber": {
            "type": "string",
            "description": "Tracking number (for shipped status)"
          }
        }
      }
    }
  }
}